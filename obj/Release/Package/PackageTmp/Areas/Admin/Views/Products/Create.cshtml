@model SinglePageApp.Product

@{
    Layout = null;
}
@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { dir = "rtl", id = "FormCreateProduct", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ImgName)
    @Html.HiddenFor(x => x.ProductId)
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discryption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Discryption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discryption, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="" name="tags" class="form-control" data-role="tagsinput" />
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Linq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Linq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Linq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <img src="@Url.Content("/images/product/" + @Model.ImgName)" id="ImgNameAdd" width="200" height="200" />
            <div class="col-md-10">
                <input type="file" name="UploadFile" id="up_create" onchange="ShowImagePreview(this,document.getElementById('ImgNameAdd'))" />
                @Html.ValidationMessageFor(model => model.ImgName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">

            <div class="col-md-10" id="group_create_product">
                @{



                    IEnumerable<Group> Groups = ViewBag.Groups;
                    <ul>
                        @foreach (var item in Groups.Where(x => x.Parent_id == null))
                        {

                            <li>
                                <input type="checkbox" name="Product_Group" value="@item.GroupId" /><span>@item.Name</span>

                                @if (item.Groups.Any())
                                {
                                    <ul>
                                        @foreach (var i in item.Groups)
                                        {
                                            <li>
                                                <input type="checkbox" name="Product_Group" value="@i.GroupId" /><span>@i.Name</span>
                                            </li>
                                        }
                                    </ul>
                                }

                            </li>

                        }
                    </ul>


                }



            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>
<script>
    $("#Discryption").ckeditor();
</script>










